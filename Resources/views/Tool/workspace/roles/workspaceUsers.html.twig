{% macro renderPager(search, workspaceId, withUnregistered, queryString, pager) %}
{% if search == '' %}
    {{
    pagerfanta(
    pager,
    'twitter_bootstrap_translated',
    {
    'proximity' : 1,
    'routeName': 'claro_workspace_registered_user_list',
    'routeParams': {'workspace': workspaceId, 'withUnregistered': withUnregistered},
    'queryString': queryString
    }
    )
    }}
{% else %}
    {{
    pagerfanta(
    pager,
    'twitter_bootstrap_translated',
    {
    'proximity' : 1,
    'routeName': 'claro_workspace_registered_user_list_search',
    'routeParams': {'search': search, 'workspace': workspaceId, 'withUnregistered': withUnregistered},
    'queryString': queryString
    }
    )
    }}
{% endif %}
{% endmacro %}

{% macro displayControls(workspaceId) %}
{% if app.user %}
{% endif %}
{% endmacro %}

{% from _self import renderPager %}
{% from _self import displayControls %}

{% set queryString = '' %}
{% for role in roles %}
    {% set queryString = queryString~'roleIds[]='~role.getId() %}
    {% if not loop.last %}
        {% set queryString = queryString~'&' %}
    {% endif %}
{% endfor %}

{% extends 'ClarolineCoreBundle:Workspace:layout.html.twig' %}
{% block breadcrumb %}
    {{
        macros.breadcrumbs([
            {
                'icon': 'icon-book',
                'name': 'workspaces'|trans({}, 'platform'),
                'href': path('claro_workspace_list')
            },
            {
                'name': workspace.getName() ~ ' - ' ~  workspace.getCode(),
                'href': path('claro_workspace_open', {'workspaceId': workspace.getId(), 'toolName': 'home'})
            },
            {
                'name': 'users'|trans({}, 'platform'),
                'href': ''
            },
        ])
    }}
{% endblock %}

{% block section_content %}
    <div class="panel-body">
        <ul class="nav nav-tabs">
            <li class="active"> <a  href="#"> {{'users'|trans({}, 'platform') }} </a> </li>
            <li> <a href="{{ path('claro_workspace_registered_group_list', {'workspace': workspace.getId() })~'?'~queryString }}"> {{'groups'|trans({}, 'platform') }} </a> </li>
            <li> <a href="{{ path('claro_workspace_open_tool', {'workspaceId': workspace.getId(), 'toolName': 'users'}) }}">{{ 'roles'|trans({}, 'platform') }}</a> </li>
        </ul>

        {{ macros.flashBox() }}

        <h3>{{ 'users_list'|trans({}, 'platform') }}</h3>
        <br>

        {{ displayControls(workspace.getId()) }}
        <div class="input-append pull-right">
            <input class="input-medium" type="text" id="search-items-txt"  placeholder="{{ 'search'|trans({}, 'platform') }}" value="{{ search }}">
            <button class="filter btn btn-default" type="button" id="search-button">
                <i class="icon-search"></i>
            </button>
            <div class="btn-group">
                <button class="btn btn-default dropdown-toggle" data-toggle="dropdown">
                    {{ 'roles'|trans({}, 'platform') }}
                    <span class="caret"></span>
                </button>
                <ul class="dropdown-menu" role="menu" >
                    <li> <input id="chk-all" type="checkbox"> {{ 'select_all'|trans({}, 'platform') }}  </input> </li>
                    <li class="divider"></li>
                    {% for role in wsRoles %}
                        <li>
                        <input
                        class="chk-search chk-item"
                        type="checkbox"
                        value="{{ role.getId() }}"
                        data-name="{{ role.getTranslationKey()|trans({}, 'platform') }}"
                        {% for toCheck in roles %}
                            {% if toCheck.getId() == role.getId() %}
                                checked
                            {% endif %}
                        {% endfor %}
                        > {{ role.getTranslationKey()|trans({}, 'platform') }}
                        </input>
                        </li>
                    {% endfor %}
                </ul>
            </div>
        </div>
        <div class="btn-group">
            <a href="#" class="btn btn-default dropdown-toggle">
                {{ 'add_users'|trans({}, 'platform') }}
            </a>
        </div>
        <br>

        {{ renderPager(search, workspace.getId(), withUnregistered, queryString, pager) }}
        <table class="table table-striped table-bordered table-condensed">
            <thead>
                <tr>
                    <td>{{ 'name'|trans({}, 'platform') }}</td>
                    <td>{{ 'role'|trans({}, 'platform') }}</td>
                </tr>
            </thead>
            <tbody id="user-table-body">
                {% for user in pager.currentPageResults %}
                    <tr id="row-{{ user.id }}" class="row-user" data-user-id="{{ user.getId() }}">
                        <td class="popover-block"
                            data-trigger="hover"
                            data-content="{% render controller('ClarolineCoreBundle:User:renderPopover', {'user': user}) %}"
                            data-container="td"
                            data-placement="top"
                            data-html="true"
                            >
                            {{ user.lastname }} {{ user.firstname }}
                        </td>
                        <td>
                            {% for role in user.getEntityRoles() %}
                                {% if role.getWorkspace() == workspace %}
                                    <span class="label label-success" id="label-{{ role.getId () }}-{{ user.getId()}}">
                                        {{ role.getTranslationKey()|trans({}, 'platform') }}
                                        <i class="icon-remove-sign pointer-hand remove-role-button"
                                            href="{{ path('claro_workspace_remove_role_from_user', {'workspace': workspace.getId(), 'user': user.getId(), 'role': role.getId() } ) }}"
                                            >
                                        </i>
                                    </span>
                                {% endif %}
                            {% endfor %}
                        </td>
                    </tr>
                {% endfor %}
            </tbody>
        </table>
        {{ renderPager(search, workspace.getId(), withUnregistered, queryString, pager) }}
        {{ displayControls(workspace.getId()) }}
    </div>
{% endblock %}
{% block javascripts %}
    {{ parent() }}
    {% javascripts
    vars=["locale"]
    "@ClarolineCoreBundle/Resources/views/Tool/workspace/roles/roleUserLabel.html.twigjs"
    "@ClarolineCoreBundle/Resources/views/Modal/modal.html.twigjs"
    filter="twig_js"
    %}
    <script language="javascript" src="{{ asset_url }}"></script>
    {% endjavascripts %}
    <script>
        $('.popover-block').popover();
        $('.remove-role-button').live('click', function (event) {
            var target = $(event.currentTarget);
            var route = target.attr('href');
            $.ajax({
                url: route,
                type: 'DELETE',
                success: function() {
                    target.parent().remove();
                }
            });
        });

        $('#search-button').click(function () {
            var search = document.getElementById('search-items-txt').value;
            var withUnregistered = $('#chk-unregistered').is(':checked') ? 1: 0;
            var queryString = {};
            var i = 0;
            var array = [];
            $('.chk-search:checked').each(function (index, element) {
                array[i] = element.value;
                i++;
            });
            queryString.roleIds = array;

            if (search !== '') {
                var route = Routing.generate('claro_workspace_registered_user_list_search', {'workspace': {{ workspace.getId }}, 'withUnregistered': withUnregistered, 'search': search });
                } else {
                var route = Routing.generate('claro_workspace_registered_user_list', {'workspace': {{ workspace.getId }}, 'withUnregistered': withUnregistered });
            }

            route += '?' + $.param(queryString);
            window.location.href = route;
        });

        $('#chk-all').on('click', function(event) {
            if ($('#chk-all').is(':checked')) {
                $('.chk-item').attr('checked', true);
            }
            else {
                $('.chk-item').attr('checked', false);
            }
        });
    </script>
{% endblock %}
