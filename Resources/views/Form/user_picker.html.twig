{% extends 'ClarolineCoreBundle::form_theme.html.twig' %}

{% block userpicker_widget %}
    {% spaceless %}
        {% set timedPickerName = picker_name ~ '-' ~ 'now'|date('U') %}

        {% if multiple %}
            <input type="hidden"
                   name="{{ full_name }}[]"
                   id="user-picker-input-{{ timedPickerName }}"

                   {% if value is not empty %}
                       value="{% for v in value %}{% if v['id'] is defined %}{{ v['id'] }}{% if not loop.last %},{% endif %}{% endif %}{% endfor %}"
                       data-selected-users-names="{% for v in value %}{% if v['name'] is defined %}{{ v['name'] }}{% if not loop.last %};;;{% endif %}{% endif %}{% endfor %}"
                   {% endif %}
            >
        {% else %}
            <input type="hidden"
                   name="{{ full_name }}"
                   id="user-picker-input-{{ timedPickerName }}"

                   {% if value is not empty and value['id'] is defined %}
                       value="{{ value['id'] }}"
                   {% endif %}
            >
        {% endif %}
        <div class="input-group">
            <input type="text"
                   class="form-control user-picker user-picker-input user-picker-{{ timedPickerName }}"
                       
                   {% if value is not empty %}
                       {% if multiple %}
                           value="{% for v in value %}{% if v['name'] is defined %}{{ v['name'] }}{% if not loop.last %},{% endif %}{% endif %}{% endfor %}"
                       {% elseif value['name'] is defined %}
                           value="{{ value['name'] }}"
                       {% endif %}
                   {% endif %}
                   id="user-picker-input-view-{{ timedPickerName }}"
                   placeholder="{{ 'add_user'|trans({}, 'platform') }}"
            >
            <span class="input-group-btn">
                <span class="btn btn-default user-picker user-picker-{{ timedPickerName }}"
                      type="button"
                >
                    <i class="fa fa-user"></i>
                </span>
            </span>
        </div>

        {% javascripts debug=false filter='jsmin' output='js/claroline/user_picker.js'
            'bundles/clarolinecore/js/user/user_picker.js'
        %}
            <script type="text/javascript" src="{{ asset_url }}"></script>
        {% endjavascripts %}

        <script type="text/javascript">
            {% set excludedUserIds = [] %}
            {% set forcedUserIds = [] %}
            {% set selectedUserIds = [] %}
            {% set forcedGroupIds = [] %}
            {% set forcedRoleIds = [] %}
            {% set forcedWorkspaceIds = [] %}
            {% set shownWorkspaceIds = [] %}

            {% for user in blacklist %}
                {% set excludedUserIds = excludedUserIds|merge([user.getId()]) %}
            {% endfor %}

            {% for user in whitelist %}
                {% set forcedUserIds = forcedUserIds|merge([user.getId()]) %}
            {% endfor %}

            {% for user in selected_users %}
                {% set selectedUserIds = selectedUserIds|merge([user.getId()]) %}
            {% endfor %}

            {% for group in forced_groups %}
                {% set forcedGroupIds = forcedGroupIds|merge([group.getId()]) %}
            {% endfor %}

            {% for role in forced_roles %}
                {% set forcedRoleIds = forcedRoleIds|merge([role.getId()]) %}
            {% endfor %}

            {% for workspace in forced_workspaces %}
                {% set forcedWorkspaceIds = forcedWorkspaceIds|merge([workspace.getId()]) %}
            {% endfor %}

            {% for workspace in shown_workspaces %}
                {% set shownWorkspaceIds = shownWorkspaceIds|merge([workspace.getId()]) %}
            {% endfor %}

            $('body').on('click', '.user-picker-{{ timedPickerName }}', function () {
                var userPicker = new UserPicker();
                var settings = {
                    picker_name: "{{ timedPickerName }}",
                    picker_title: "{{ picker_title }}",
                    multiple: {% if multiple %}true{% else %}false{% endif %},
                    show_all_users: {% if show_all_users %}true{% else %}false{% endif %},
                    show_filters: {% if show_filters %}true{% else %}false{% endif %},
                    show_id: {% if show_id %}true{% else %}false{% endif %},
                    show_username: {% if show_username %}true{% else %}false{% endif %},
                    show_mail: {% if show_mail %}true{% else %}false{% endif %},
                    show_code: {% if show_code %}true{% else %}false{% endif %},
                    show_groups: {% if show_groups %}true{% else %}false{% endif %},
                    show_platform_roles: {% if show_platform_roles %}true{% else %}false{% endif %},
                    blacklist: {{ excludedUserIds|json_encode }},
                    whitelist: {{ forcedUserIds|json_encode }},
                    selected_users: {{ selectedUserIds|json_encode }},
                    forced_groups: {{ forcedGroupIds|json_encode }},
                    forced_roles: {{ forcedRoleIds|json_encode }},
                    forced_workspaces: {{ forcedWorkspaceIds|json_encode }},
                    shown_workspaces: {{ shownWorkspaceIds|json_encode }}
                };
                userPicker.configure(settings, null);
                userPicker.open();
            });
        </script>
    {% endspaceless %}
{% endblock %}
